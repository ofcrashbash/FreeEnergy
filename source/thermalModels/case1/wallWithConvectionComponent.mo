model wallWithConvectionComponent
  wallComponent simple_wall_component(thermal_conductance_of_wall = thermal_conductance_of_wall, surface_area = surface_area, wall_thickness = wall_thickness, wall_material_heat_capacity = wall_material_heat_capacity, initial_temperature = initial_temperature, wall_density(displayUnit = "kg/m3") = wall_density) "Simple wall component" annotation(Placement(visible = true, transformation(origin = {0, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_a annotation(Placement(visible = true, transformation(origin = {-148.265, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {-99.377, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_b annotation(Placement(visible = true, transformation(origin = {148.274, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {101.01, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Components.Convection convection_outside "Outside convection" annotation(Placement(visible = true, transformation(origin = {-70, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Thermal.HeatTransfer.Components.Convection convection_inside "Convection inside of room" annotation(Placement(visible = true, transformation(origin = {70, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealInput wind_speed_outside annotation(Placement(visible = true, transformation(origin = {-155, 60}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {-51.841, 90}, extent = {{-20, -20}, {20, 20}}, rotation = -90)));
  Modelica.Blocks.Interfaces.RealInput wind_speed_inside annotation(Placement(visible = true, transformation(origin = {-155, 90}, extent = {{-20, -20}, {20, 20}}, rotation = 0), iconTransformation(origin = {50, 90}, extent = {{20, 20}, {-20, -20}}, rotation = -270)));
  windSpeedToConvectiveHeatCoeff wind_speed_to_convective_heat_coeff_outside annotation(Placement(visible = true, transformation(origin = {-92.308, 60.004}, extent = {{-15.004, -15.004}, {15.004, 15.004}}, rotation = 0)));
  windSpeedToConvectiveHeatCoeff wind_speed_to_convective_heat_coeff_inside annotation(Placement(visible = true, transformation(origin = {-92.136, 89.832}, extent = {{-14.832, -14.832}, {14.832, 14.832}}, rotation = 0)));
  Modelica.Blocks.Math.Gain gain_by_area_outside(k = surface_area) annotation(Placement(visible = true, transformation(origin = {-70, 35}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  Modelica.Blocks.Math.Gain gain_by_area_inside(k = surface_area) annotation(Placement(visible = true, transformation(origin = {70, 35}, extent = {{-10, -10}, {10, 10}}, rotation = -90)));
  parameter Modelica.SIunits.ThermalConductivity thermal_conductance_of_wall = 0.62 "https://en.wikipedia.org/wiki/Thermal_conductivity";
  parameter Modelica.SIunits.Density wall_density = 2000 "Wall density";
  parameter Modelica.SIunits.Area surface_area = 2.3 * 4 "Area";
  parameter Modelica.SIunits.Length wall_thickness = 0.5 "Thickness of wall";
  parameter Modelica.SIunits.SpecificHeatCapacity wall_material_heat_capacity = 800 "wall material specific heat capacity";
  parameter Modelica.SIunits.Temp_K initial_temperature = 15 + 273.15 "initial temperature of wall";
  Modelica.Blocks.Interfaces.RealOutput wall_average_temperature "Wall average temperature" annotation(Placement(visible = true, transformation(origin = {150, 35}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {103.488, 77.224}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput convection_coeff "Heat transfer coefficient as function of wind speed" annotation(Placement(visible = true, transformation(origin = {150, 65}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {103.347, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(port_a, convection_outside.solid) annotation(Line(visible = true, origin = {-114.132, 0}, points = {{-34.132, 0}, {34.132, 0}}, color = {191, 0, 0}));
  connect(convection_outside.fluid, simple_wall_component.port_a) annotation(Line(visible = true, origin = {-35, 0}, points = {{-25, 0}, {25, 0}}, color = {191, 0, 0}));
  connect(simple_wall_component.port_b, convection_inside.solid) annotation(Line(visible = true, origin = {35, 0}, points = {{-25, 0}, {25, 0}}, color = {191, 0, 0}));
  connect(convection_inside.fluid, port_b) annotation(Line(visible = true, origin = {114.137, 0}, points = {{-34.137, 0}, {34.137, 0}}, color = {191, 0, 0}));
  connect(wind_speed_outside, wind_speed_to_convective_heat_coeff_outside.wind_speed) annotation(Line(visible = true, origin = {-120.359, 60.002}, points = {{-34.641, -0.002}, {10.047, -0.002}, {10.047, 0.002}, {14.547, 0.002}}, color = {1, 37, 163}));
  connect(wind_speed_inside, wind_speed_to_convective_heat_coeff_inside.wind_speed) annotation(Line(visible = true, origin = {-120.105, 89.916}, points = {{-34.895, 0.084}, {10.137, 0.084}, {10.137, -0.084}, {14.62, -0.084}}, color = {1, 37, 163}));
  connect(wind_speed_to_convective_heat_coeff_outside.convective_heat_coeff, gain_by_area_outside.u) annotation(Line(visible = true, origin = {-72.435, 55.669}, points = {{-4.869, 4.335}, {2.435, 4.335}, {2.435, -8.669}}, color = {1, 37, 163}));
  connect(wind_speed_to_convective_heat_coeff_inside.convective_heat_coeff, gain_by_area_inside.u) annotation(Line(visible = true, origin = {20.899, 75.555}, points = {{-98.203, 14.277}, {49.101, 14.277}, {49.101, -28.555}}, color = {1, 37, 163}));
  connect(gain_by_area_inside.y, convection_inside.Gc) annotation(Line(visible = true, origin = {70, 17}, points = {{0, 7}, {0, -7}}, color = {1, 37, 163}));
  connect(gain_by_area_outside.y, convection_outside.Gc) annotation(Line(visible = true, origin = {-70, 17}, points = {{0, 7}, {0, -7}}, color = {1, 37, 163}));
  connect(simple_wall_component.wall_temperature, wall_average_temperature) annotation(Line(visible = true, origin = {-18.43, 72.509}, points = {{28.259, -68.509}, {113.43, -50.974}, {145.706, -37.509}, {168.43, -37.509}}, color = {1, 37, 163}));
  connect(convection_coeff, wind_speed_to_convective_heat_coeff_outside.convective_heat_coeff) annotation(Line(visible = true, origin = {-15.183, 62.502}, points = {{165.183, 2.498}, {145.183, 2.498}, {-53.174, -2.498}, {-62.121, -2.498}}, color = {1, 37, 163}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Bitmap(visible = true, fileName = "", imageSource = "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
", extent = {{-100, -100}, {100, 100}}), Text(visible = true, origin = {-50, 50}, extent = {{-21.075, -6.504}, {21.075, 6.504}}, textString = "wind speed 1"), Text(visible = true, origin = {50, 51.757}, extent = {{-21.075, -6.504}, {21.075, 6.504}}, textString = "wind speed 2")}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5}), graphics = {Bitmap(visible = true, origin = {131.357, 60}, fileName = "", imageSource = "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAACXBIWXMAAAsTAAALEwEAmpwYAAAABGdBTUEAALGeYUxB9wAAACBjSFJNAAB6JQAAgIMAAPn/AACA6AAAUggAARVYAAA6lwAAF2/XWh+QAAAB7klEQVR42mJsufTiPwMZACCAWP5//4Fd4tcnBsndRQzyn/aA+Q/5XBieu/Yx/GHjA/MBAojl3zfsGmWOlDHo/N7DoKEA4Qu83MPAfKCM4Z7NBDAfIIBY/uKwUebtDrAmDlYIX0OcgeHDgx0Mt6HqAQKI5Q8OjbgATD1AALH8xuHUJ8IeDDde7gDbBAI3XkLEYOoBAojlF5Dx69dvhrev34MFePm4GXh4uRkuCqcw/P39B+g8ROBcAYrBNAIEEMuXT18Y3rx6z2Ctp8hgoCbNMHfTcYY/QIM4uTgYTgjlgDEc/AIREI0AAcTy+uU7BjtDZYZkP0uGn7/+MOSFOzBMXHGA4dfP3wzs7KwM////Z/j06SvDnz9/wRp4eLjA4gABxGRvpMKQEWjN8PfvPzCWEOJjSAPyQbZ+/vyN4cOHLwwC3BwMsV5mDN7W2gw/f/wEiwMEEOOPn7///wDa9PP3bwYwDcQg+tGLdwwLt55kYGVlYQhxNADb9gNo2Kt3nxkOXbjLABBATH/+AW0C4j9QG2G0iAAPQ5iLETDg/jDce/oGIg5Ux83FzmCqJccAEEBMCMX/Ic5FMkiIj4vBz06X4fiVBwwPnr+Fe4eLnY0BIIBYYDaAFf/7B5f8CzVMgJeTwcdGG+yFPyDDoeoAAgwAAiQQgeLRB5kAAAAASUVORK5CYII=", extent = {{-6.357, -0}, {6.357, 0}}), Text(visible = true, origin = {-2.5, -96.12}, extent = {{-142.5, -6.12}, {142.5, 6.12}}, textString = "https://help.iesve.com/ve2018/convection_heat_transfer.htm?ms=ZxgAAEAEAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAQGcBMHxwAwR4CA%3D%3D&st=MA%3D%3D&sct=NDAw&mw=NDY2"), Text(visible = true, origin = {-5, -85}, extent = {{-138.677, -7.5}, {138.677, 7.5}}, textString = "Here is more details how to calculate properly heat transfer coefficient depending on wall orientation etc..")}));
end wallWithConvectionComponent;
