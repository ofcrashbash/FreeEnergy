%implements s0_b0_nd4bc_SystemInitialize "C"

%function SystemInitialize(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
/* InitializeConditions for StateSpace: '<Root>/Analog Filter Design' */
vrmaglev_sldrt_X.AnalogFilterDesign_CSTATE[0] = vrmaglev_sldrt_P.AnalogFilterDesign_InitialCondition;
vrmaglev_sldrt_X.AnalogFilterDesign_CSTATE[1] = vrmaglev_sldrt_P.AnalogFilterDesign_InitialCondition;
/* InitializeConditions for Integrator: '<S3>/position' */
vrmaglev_sldrt_X.position_CSTATE = vrmaglev_sldrt_P.position_IC;
/* InitializeConditions for UnitDelay: '<S6>/Unit Delay' */
vrmaglev_sldrt_DW.UnitDelay_DSTATE = vrmaglev_sldrt_P.DiscreteTimeLimitedIntegrator_X0;
/* InitializeConditions for UnitDelay: '<S2>/Unit Delay' */
vrmaglev_sldrt_DW.UnitDelay_DSTATE_a = vrmaglev_sldrt_P.UnitDelay_InitialCondition;
/* InitializeConditions for TransferFcn: '<S3>/Power amplifier and coil' */
vrmaglev_sldrt_X.Poweramplifierandcoil_CSTATE = 0.0;
/* InitializeConditions for Integrator: '<S3>/velocity' */
vrmaglev_sldrt_X.velocity_CSTATE = vrmaglev_sldrt_P.velocity_IC;
%<SLibInsertInitPeriodicCStatesFcn(system)>
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedSystemInitializeLocalVars", localVarDecl)>
%endfunction
%function SystemInitializeFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void SystemInitialize(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%endfunction
