component Em_table < foundation.electrical.branch
    % Em_table
    % This block implements the main branch voltage source, capacity, and
    % state of charge (SOC).
    
    % Copyright 2012 The MathWorks, Inc.
    
    inputs
        T = {293.15,'K'} % T:right
    end
    
    outputs
        C = {31,'A*hr'} %C:left
        SOC = {1,'1'} %SOC:left
    end
    
    parameters (Size=variable)
        C_Table = {[29 30 31],'A*hr'} % Capacity Table vs Temp (1xN array)
        Em_Table = {3.8*ones(5,3),'V'} % Em (OCV) Table vs SOC, Temp (MxN array)
        SOC_Table = {[0;0.1;0.5;0.9;1],'1'} % SOC Breakpoints (Mx1 array)
        Temp_Table = {[273.15 293.15 313.15],'K'} % Temperature Breakpoints (1xN array)
    end
    
    parameters
        Qinit = {0,'A*hr'} % Initial charge deficit
    end
    
    variables
        Qe = {0,'A*hr'}; % Charge deficit
    end
    
    function setup
    
    % Check parameter values
    if any(value(C_Table,'A*hr')<=0)   
        pm_error('simscape:GreaterThanZero','Capacity Table vs Temp (1xN array)');
    end
    if any(any(value(Em_Table,'V')<=0))
        pm_error('simscape:GreaterThanZero','Em (OCV) Table vs SOC, Temp (MxN array)');
    end
    if any(value(SOC_Table,'1')<0)
        pm_error('simscape:GreaterThanOrEqualToZero','SOC Breakpoints (Mx1 array)');
    end
    if any(value(Temp_Table,'K')<0)
        pm_error('simscape:GreaterThanOrEqualToZero','Temperature Breakpoints (1xN array)');
    end
    if value(Qinit,'A*hr')<0
        pm_error('simscape:GreaterThanOrEqualToZero','Initial charge deficit');
    end
    
    % Set initial charge deficit
    Qe = Qinit;
    end
    
    equations
        
        % Charge deficit calculation
        % Prevent SOC>1
        if Qe<0 && i>0
            Qe.der == 0;
        else
            Qe.der == -i;
        end
        
        % Perform the capacity table lookup
        C == tablelookup(Temp_Table,C_Table,T,...
            interpolation=linear,extrapolation=nearest)
        
        % SOC Equation
        SOC == 1 - Qe/C;
        
        % Electrical equation by table lookup
        v == tablelookup(SOC_Table,Temp_Table,Em_Table,SOC,T,...
            interpolation=linear,extrapolation=nearest)
        
    end
    
end